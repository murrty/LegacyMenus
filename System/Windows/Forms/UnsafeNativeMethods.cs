//----------------------
// <auto-generated>
//     Backwards compatibility with Menus.
// </auto-generated>
//----------------------
// System.Windows.Forms.UnsafeNativeMethods
#if NETCOREAPP3_1_OR_GREATER
namespace System.Windows.Forms.Natives;
using System.Runtime.InteropServices;
using System.Security;
[SuppressUnmanagedCodeSecurity]
internal static class UnsafeNativeMethods {
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern IntPtr GetMenu(HandleRef hWnd);

    [DllImport("user32.dll", EntryPoint = "GetMenuInfo", SetLastError = true, CharSet = CharSet.Auto)]
    internal static extern bool GetMenuInfo(nint hMenu, [In][Out] NativeMethods.MENUINFO_T lpcmi);

    [DllImport("user32.dll", EntryPoint = "SetMenuInfo", SetLastError = true, CharSet = CharSet.Auto)]
    internal static extern bool SetMenuInfo(nint hMenu, [In][Out] NativeMethods.MENUINFO_T lpcmi);

    [DllImport("user32.dll", EntryPoint = "SetMenuItemInfo", SetLastError = true, CharSet = CharSet.Auto)]
    internal static extern bool SetMenuInfo(nint hMenu, uint uItem, bool fByPosition, [In][Out] NativeMethods.MENUINFO_T lpmii);

    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern bool GetMenuItemInfo(HandleRef hMenu, int uItem, bool fByPosition, [In][Out] NativeMethods.MENUITEMINFO_T lpmii);
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern bool GetMenuItemInfo(HandleRef hMenu, int uItem, bool fByPosition, [In][Out] NativeMethods.MENUITEMINFO_T_RW lpmii);

    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern bool SetMenuItemInfo(HandleRef hMenu, int uItem, bool fByPosition, NativeMethods.MENUITEMINFO_T lpmii);
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern bool SetMenuItemInfo(HandleRef hMenu, int uItem, bool fByPosition, NativeMethods.MENUITEMINFO_T_RW lpmii);

    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern bool InsertMenuItem(HandleRef hMenu, int uItem, bool fByPosition, NativeMethods.MENUITEMINFO_T lpmii);
    [DllImport("user32.dll", CharSet = CharSet.Auto)]
    public static extern bool InsertMenuItem(HandleRef hMenu, int uItem, bool fByPosition, NativeMethods.MENUITEMINFO_T_RW lpmii);

    [DllImport("user32.dll", CharSet = CharSet.Auto, EntryPoint = "CreateMenu", ExactSpelling = true)]
    private static extern IntPtr IntCreateMenu();

    public static IntPtr CreateMenu() {
        return System.Internal.HandleCollector.Add(IntCreateMenu(), NativeMethods.CommonHandles.Menu);
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    public static extern int GetMenuItemID(HandleRef hMenu, int nPos);

    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    public static extern IntPtr GetSubMenu(HandleRef hwnd, int index);

    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    public static extern int GetMenuItemCount(HandleRef hMenu);

    [DllImport("user32.dll", CharSet = CharSet.Auto, EntryPoint = "GetDC", ExactSpelling = true)]
    private static extern IntPtr IntGetDC(HandleRef hWnd);

    public static IntPtr GetDC(HandleRef hWnd) {
        return System.Internal.HandleCollector.Add(IntGetDC(hWnd), NativeMethods.CommonHandles.HDC);
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, EntryPoint = "ReleaseDC", ExactSpelling = true)]
    private static extern int IntReleaseDC(HandleRef hWnd, HandleRef hDC);

    public static int ReleaseDC(HandleRef hWnd, HandleRef hDC) {
        System.Internal.HandleCollector.Remove((IntPtr)hDC, NativeMethods.CommonHandles.HDC);
        return IntReleaseDC(hWnd, hDC);
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, EntryPoint = "CreatePopupMenu", ExactSpelling = true)]
    private static extern IntPtr IntCreatePopupMenu();

    public static IntPtr CreatePopupMenu() {
        return System.Internal.HandleCollector.Add(IntCreatePopupMenu(), NativeMethods.CommonHandles.Menu);
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    public static extern bool RemoveMenu(HandleRef hMenu, int uPosition, int uFlags);

    [DllImport("user32.dll", CharSet = CharSet.Auto, EntryPoint = "DestroyMenu", ExactSpelling = true)]
    private static extern bool IntDestroyMenu(HandleRef hMenu);

    public static bool DestroyMenu(HandleRef hMenu) {
        System.Internal.HandleCollector.Remove((IntPtr)hMenu, NativeMethods.CommonHandles.Menu);
        return IntDestroyMenu(hMenu);
    }

    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    public static extern bool SetMenu(HandleRef hWnd, HandleRef hMenu);

    [DllImport("user32.dll", CharSet = CharSet.Auto, ExactSpelling = true)]
    public static extern bool SetMenuDefaultItem(HandleRef hwnd, int nIndex, bool pos);
}
#endif